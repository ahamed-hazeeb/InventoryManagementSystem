@model IEnumerable<InventoryManagementSystem.Models.Order>

@{
    ViewData["Title"] = "Orders";
}

<h1>Orders</h1>

<div class="row mb-3">
    <div class="col-md-6">
        <a asp-action="Create" class="btn btn-primary"><i class="fas fa-plus"></i> Create New</a>
    </div>
    <div class="col-md-6">
        <input type="text" id="searchInput" class="form-control" placeholder="Search orders by status or date...">
    </div>
</div>

<table id="ordersTable" class="table table-striped table-hover" style="width:100%;">
    <thead class="table-dark">
        <tr>
            <th>@Html.DisplayNameFor(model => model.OrderDate)</th>
            <th>@Html.DisplayNameFor(model => model.Status)</th>
            <th>Items</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr class="@(order.Status == "Pending" ? "table-warning" : "")">
                <td>@Html.DisplayFor(modelItem => order.OrderDate)</td>
                <td>
                    @* @Html.DisplayFor(modelItem => order.Status) *@
                    @switch (order.Status)
                    {
                        case "Pending":
                            <span class="badge bg-danger ms-2">Pending</span>
                            break;
                        case "Shipped":
                            <span class="badge bg-primary ms-2">Shipped</span>
                            break;
                        case "Delivered":
                            <span class="badge bg-success ms-2">Delivered</span>
                            break;
                        default:
                            <span class="badge bg-secondary ms-2">@order.Status</span>
                            break;
                    }
                </td>
                <td>
                    @if (order.OrderItems != null && order.OrderItems.Any())
                    {
                        <ul>
                            @foreach (var orderItem in order.OrderItems)
                            {
                                <li>@orderItem.InventoryItem?.Name (Qty: @orderItem.Quantity)</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <span>No items</span>
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@order.Id" class="btn btn-sm btn-primary me-1" title="Edit"><i class="fas fa-edit"></i></a>
                    <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-info me-1" title="Details"><i class="fas fa-info-circle"></i></a>
                    <a asp-action="Delete" asp-route-id="@order.Id" class="btn btn-sm btn-danger" title="Delete"><i class="fas fa-trash"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize DataTables
            var table = $('#ordersTable').DataTable({
                paging: true,
                pageLength: 10,
                searching: false,
                ordering: true,
                order: [[0, 'desc']], // Sort by OrderDate descending
                columnDefs: [
                    { orderable: false, targets: 3 } // Disable sorting on Actions
                ]
            });

            // Custom search filter using DataTables API
            $('#searchInput').on('input', function () {
                table.search(this.value).draw();
            });
        });
    </script>
}